<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Binomed blog]]></title>
  <link href="http://binomed.github.com/atom.xml" rel="self"/>
  <link href="http://binomed.github.com/"/>
  <updated>2013-02-05T10:42:36+01:00</updated>
  <id>http://binomed.github.com/</id>
  <author>
    <name><![CDATA[jefBinomed]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Android] Communication between Android and Google AppEngine with serialization]]></title>
    <link href="http://binomed.github.com/blog/2012/03/15/android-communication-between-android-and-google-appengine-with-serialization/"/>
    <updated>2012-03-15T23:06:00+01:00</updated>
    <id>http://binomed.github.com/blog/2012/03/15/android-communication-between-android-and-google-appengine-with-serialization</id>
    <content type="html"><![CDATA[<p>The purpose of this article is to make a benchmark of 3 frameworks that we could use as developers to make an Android application communicate with a Google AppEngine Server. <img class="right" src="http://binomed.github.com/images/2012-03-15/gae_android.jpg"></p>

<h1>What is compared and how ?</h1>


<p>I study 4 axes in this benchmark :</p>

<ol>
    <li>Is it simple to implement ? it’s purely subjective but it could give a little idea about how is it complicated to integrate it in your projects.</li>
    <li>Could I manage complex objects ? it’s to evaluate the complexity of POJO we could send or retrieve to / from the server.</li>
    <li>What is the impact on final apk size ? it’s use to determine the impact of the framework on the apk final size. This is very important because the available place on Android phone is very limited sometimes.</li>
    <li>Is it effective ? we will look at the time between the call of server and the response. It is i think the most important criteria for the final choice.</li>
</ol>


<p>&nbsp;
For the benchmark, we will use those POJO :</p>

<p>This object show that we could have complex objects ownig other objects</p>

<figure class='code'><figcaption><span>IObjectA</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IObjectA</span> <span class="kd">extends</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">T</span> <span class="nf">getObjectB</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setObjectB</span><span class="o">(</span><span class="n">T</span> <span class="n">objectB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">List</span> <span class="nf">getListObjectB</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setListObjectB</span><span class="o">(</span><span class="n">List</span> <span class="n">listObjectB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">String</span> <span class="nf">getName</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This object show a very simple POJO</p>

<figure class='code'><figcaption><span>IObjectB</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IObjectB</span> <span class="kd">extends</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">String</span> <span class="nf">getName</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="nf">getNum</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This object show a simple POJO with an HashMap in order to test the serialization</p>

<figure class='code'><figcaption><span>IObjectBMap</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IObjectBMap</span> <span class="kd">extends</span> <span class="n">IObjectB</span><span class="o">,</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">HashMap</span> <span class="nf">getMap</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setMap</span><span class="o">(</span><span class="n">HashMap</span> <span class="n">map</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<p>For this we are going to implements this application</p>

<p>&nbsp;
<img src="http://binomed.github.com/images/2012-03-15/app_tuto.jpg"></p>

<p>This is a very simple application with 3 tabs. On each tab, there is 2 buttons.</p>

<ul>
<li>The first button make a basic request which returns from server an instance of IObjectA.</li>
<li>The second button takes care of the field to the right by asking “n” IObjectB in the list of IObjectA (“n” is the number in the field)</li>
</ul>


<h1>What are the compare elements ?</h1>


<p>I have selected 3 frameworks  :</p>

<ol>
    <li><a href="http://java-json-rpc.sourceforge.net/">java-json-rpc</a>. I choose this framework because I want a neutral framework so I search somes java json rpc librairies and this one look pretty good and simple. The project is based on JSON-PRC 2.0 specifications. It is still in Alpha version and hasn&#8217;t evolved since may 2011.</li>
    <li><a href="http://code.google.com/webtoolkit/doc/latest/DevGuideRequestFactory.html">google request-factory</a>. I choose this framework because it is the referenced framework use while you are using the plugin Appengine with android. Request Factory is a recent framework and is pretty popular in GWT projects.</li>
    <li><a href="http://www.restlet.org/">restlet</a>. I choose this framework because it is one of the best implementation of REST  which is a very popular framework used on severals servers.</li>
</ol>


<p>I choose those 3 frameworks because the both of three are solutions to do serialization between java server and java client. They are all using json messages.</p>

<h1>Architecture</h1>


<p>This tutorial is composed by 2 projects :</p>

<ol>
    <li>An android application</li>
    <li>An Google AppEngine application</li>
</ol>


<p>The android application will comunicate with the AppEngine application in local.  In order to minimize duplicate code, the AppEngine project will have a &#8221;<strong>shared</strong>&#8221; folder with the Android project.</p>

<h1>Implementation</h1>


<p>This tutorial will be done with <a href="http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/indigosr1">eclipse 3.7</a>, <a href="http://code.google.com/intl/fr/eclipse/docs/getting_started.html">Google Plugin for indigo</a> and <a href="http://developer.android.com/sdk/eclipse-adt.html">android ADT plugin</a>. All used jar are available on the <a href="https://github.com/binomed/android_sandbox/tree/master/RpcTests" target="_blank">github project</a> of this tutorial (see at the end of article).  First we have to create the android project : <strong>File -> New -> Android Project</strong></p>

<p><img src="http://binomed.github.com/images/2012-03-15/androidProject.jpg"></p>

<p>Select as minimal sdk : <em>donuts</em>. I didn’t test this tutorial with previous versions of sdk but I think it will work to.</p>

<p>Create the AppEngine project : <strong>File -> New -> Web Application Project</strong></p>

<p><img src="http://binomed.github.com/images/2012-03-15/AppEngineProject.jpg"></p>

<p>Create the shared folder. This folder will contain all shared interfaces and all POJOs that will be exchange between projects.</p>

<p><em><strong>Right Click on AppEngineRpcProject -&gt; New -&gt;Source Folder</strong></em>. Call it &#8221;<strong>shared</strong>&#8221;.</p>

<p>Now we have to add it on android project :</p>

<p><strong><em>Right Click on AndroidRpcProject -&gt; Build Path -&gt; Configure Build Path</em></strong>. Click on button &#8220;Link Source&#8221; and select the folder shared in your file system.</p>

<p><img src="http://binomed.github.com/images/2012-03-15/shared-folder.jpg"></p>

<p>&nbsp;
Normaly, you should have the same image for yours projects<br/>
&nbsp;
<img src="http://binomed.github.com/images/2012-03-15/projects.jpg"></p>

<p>First we have to create the IObjectA, IObjectB previously seen. Go on the AppEngineRpcProject in the shared folder and create a package with the name &#8221;<strong>com.binomed.client</strong>&#8221;.   In this package create the previous interface IObjectA, IObjectB and IObjectBMap.</p>

<p>Now we can create the squeleton of our android project :</p>

<p>Now we have to create  the main Android activity : <em><strong>AndroidRpcProjectActivity</strong></em>. Put the folowing code in the class :</p>

<figure class='code'><figcaption><span>AndroidRpcProjectActivity</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">rpc</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndroidRpcProjectActivity</span> <span class="kd">extends</span> <span class="n">TabActivity</span> <span class="kd">implements</span> <span class="n">OnClickListener</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// In android when we call localhost, we have to set the adress 10.0.2.2</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">LOCALHOST</span> <span class="o">=</span> <span class="s">&quot;http://10.0.2.2:8888&quot;</span><span class="o">;</span> <span class="c1">//$NON-NLS-1$</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;TestAndroidActivity&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// the editTexts area where results will be puts</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">EditText</span> <span class="n">requestFactory</span><span class="o">,</span> <span class="n">jsonRpc</span><span class="o">,</span> <span class="n">restlet</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// the editText to define the number of objects to return</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">EditText</span> <span class="n">nbParamRequestFactory</span><span class="o">,</span> <span class="n">nbParamJsonRpc</span><span class="o">,</span> <span class="n">nbParamRestlet</span><span class="o">;</span>
</span><span class='line'>  <span class="c1">// Each button do a rpc call</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Button</span> <span class="n">btnRequestFactory</span><span class="o">,</span> <span class="n">btnJsonRpc</span><span class="o">,</span> <span class="n">btnRestlet</span><span class="o">,</span> <span class="n">btnRequestFactoryParams</span><span class="o">,</span> <span class="n">btnJsonRpcParams</span><span class="o">,</span> <span class="n">btnRestletParams</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Constants used for the abstract task define in this class</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">JSON_RPC</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">REQUEST_FACTORY</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">REST</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onResume</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">.</span><span class="na">onResume</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">tabs</span><span class="o">);</span>
</span><span class='line'>      <span class="n">mContext</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">TabHost</span> <span class="n">tabHost</span> <span class="o">=</span> <span class="n">getTabHost</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Tab for Json Rpc</span>
</span><span class='line'>      <span class="n">TabSpec</span> <span class="n">jsonRpcTab</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;JsonRpc&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">jsonRpcTab</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Json Rpc&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">jsonRpcTab</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">jsonRpcLayout</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Tab for Request Factory</span>
</span><span class='line'>      <span class="n">TabSpec</span> <span class="n">requestFactoryTab</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;RequestFactory&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">requestFactoryTab</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Request Factory&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">requestFactoryTab</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">requestFactoryLayout</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Tab for Rest</span>
</span><span class='line'>      <span class="n">TabSpec</span> <span class="n">restTab</span> <span class="o">=</span> <span class="n">tabHost</span><span class="o">.</span><span class="na">newTabSpec</span><span class="o">(</span><span class="s">&quot;Rest&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">restTab</span><span class="o">.</span><span class="na">setIndicator</span><span class="o">(</span><span class="s">&quot;Rest&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">restTab</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">restLayout</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// Adding all TabSpec to TabHost</span>
</span><span class='line'>      <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">jsonRpcTab</span><span class="o">);</span> <span class="c1">// Adding json rpc tab</span>
</span><span class='line'>      <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">requestFactoryTab</span><span class="o">);</span> <span class="c1">// Adding request factory tab</span>
</span><span class='line'>      <span class="n">tabHost</span><span class="o">.</span><span class="na">addTab</span><span class="o">(</span><span class="n">restTab</span><span class="o">);</span> <span class="c1">// Adding rest tab</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// We get map all widgets</span>
</span><span class='line'>      <span class="n">requestFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">requestFactory</span><span class="o">);</span>
</span><span class='line'>      <span class="n">nbParamRequestFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">nbParamRequestFactory</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRequestFactory</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRequestFactory</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRequestFactoryParams</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRequestFactoryParams</span><span class="o">);</span>
</span><span class='line'>      <span class="n">jsonRpc</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">jsonRpc</span><span class="o">);</span>
</span><span class='line'>      <span class="n">nbParamJsonRpc</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">nbParamJsonRpc</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnJsonRpc</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnJsonRpc</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnJsonRpcParams</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnJsonParams</span><span class="o">);</span>
</span><span class='line'>      <span class="n">restlet</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">rest</span><span class="o">);</span>
</span><span class='line'>      <span class="n">nbParamRestlet</span> <span class="o">=</span> <span class="o">(</span><span class="n">EditText</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">nbParamRest</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRestlet</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRest</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRestletParams</span> <span class="o">=</span> <span class="o">(</span><span class="n">Button</span><span class="o">)</span> <span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRestParams</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// We add the listener on buttons</span>
</span><span class='line'>      <span class="n">btnRequestFactory</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRequestFactoryParams</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnJsonRpc</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnJsonRpcParams</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRestlet</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>      <span class="n">btnRestletParams</span><span class="o">.</span><span class="na">setOnClickListener</span><span class="o">(</span><span class="k">this</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="c1">// generic method wich just call an AsyncTasj with correct parameters (the type of service, if parameters are passed or not)</span>
</span><span class='line'>      <span class="k">switch</span> <span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="na">getId</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnJsonRpc</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">jsonRpc</span><span class="o">,</span> <span class="n">btnJsonRpc</span><span class="o">,</span> <span class="n">JSON_RPC</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnJsonParams</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">jsonRpc</span><span class="o">,</span> <span class="n">btnJsonRpcParams</span><span class="o">,</span> <span class="n">JSON_RPC</span><span class="o">,</span> <span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">nbParamJsonRpc</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">())).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRequestFactory</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">requestFactory</span><span class="o">,</span> <span class="n">btnRequestFactory</span><span class="o">,</span> <span class="n">REQUEST_FACTORY</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRequestFactoryParams</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">requestFactory</span><span class="o">,</span> <span class="n">btnRequestFactoryParams</span><span class="o">,</span> <span class="n">REQUEST_FACTORY</span><span class="o">,</span> <span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">nbParamRequestFactory</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">())).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRest</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">restlet</span><span class="o">,</span> <span class="n">btnRestlet</span><span class="o">,</span> <span class="n">REST</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">btnRestParams</span><span class="o">:</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">new</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">restlet</span><span class="o">,</span> <span class="n">btnRestletParams</span><span class="o">,</span> <span class="n">REST</span><span class="o">,</span> <span class="n">Integer</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">nbParamRestlet</span><span class="o">.</span><span class="na">getText</span><span class="o">().</span><span class="na">toString</span><span class="o">())).</span><span class="na">execute</span><span class="o">();</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="k">default</span><span class="o">:</span>
</span><span class='line'>          <span class="k">break</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">class</span> <span class="nc">TaskTest</span> <span class="kd">extends</span> <span class="n">AsyncTask</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">private</span> <span class="n">EditText</span> <span class="n">text</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="n">Button</span> <span class="n">btn</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span> <span class="n">type</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">int</span> <span class="n">nbParams</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="n">IObjectA</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">IObjectB</span><span class="o">&gt;</span> <span class="n">message</span><span class="o">;</span>
</span><span class='line'>      <span class="kd">private</span> <span class="kt">long</span> <span class="n">time</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">public</span> <span class="nf">TaskTest</span><span class="o">(</span><span class="n">EditText</span> <span class="n">text</span><span class="o">,</span> <span class="n">Button</span> <span class="n">btn</span><span class="o">,</span> <span class="kt">int</span> <span class="n">type</span><span class="o">,</span> <span class="kt">int</span> <span class="n">nbParams</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">text</span> <span class="o">=</span> <span class="n">text</span><span class="o">;</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">btn</span> <span class="o">=</span> <span class="n">btn</span><span class="o">;</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">type</span> <span class="o">=</span> <span class="n">type</span><span class="o">;</span>
</span><span class='line'>          <span class="k">this</span><span class="o">.</span><span class="na">nbParams</span> <span class="o">=</span> <span class="n">nbParams</span><span class="o">;</span>
</span><span class='line'>          <span class="n">btn</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
</span><span class='line'>          <span class="n">text</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;contacting server&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">protected</span> <span class="n">IObjectA</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">IObjectB</span><span class="o">&gt;</span> <span class="n">doInBackground</span><span class="o">(</span><span class="n">Void</span><span class="o">...</span> <span class="n">params</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="c1">// According to the type we do the correct call with appropriates methods and classes</span>
</span><span class='line'>                        <span class="n">time</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
</span><span class='line'>          <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">IObjectA</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">IObjectB</span><span class="o">&gt;</span> <span class="n">result</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>              <span class="k">switch</span> <span class="o">(</span><span class="n">type</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">case</span> <span class="nl">JSON_RPC:</span> <span class="o">{</span>
</span><span class='line'>                  <span class="c1">// TODO</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">case</span> <span class="nl">REQUEST_FACTORY:</span> <span class="o">{</span>
</span><span class='line'>                  <span class="c1">// TODO</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">case</span> <span class="nl">REST:</span> <span class="o">{</span>
</span><span class='line'>                  <span class="c1">// TODO</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">default</span><span class="o">:</span>
</span><span class='line'>                  <span class="k">break</span><span class="o">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Error during contacting server&quot;</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>              <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nd">@Override</span>
</span><span class='line'>      <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">IObjectA</span><span class="o">&lt;?</span> <span class="kd">extends</span> <span class="n">IObjectB</span><span class="o">&gt;</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                        <span class="c1">// Each time we manage the results with the same way.</span>
</span><span class='line'>          <span class="n">String</span> <span class="n">typeName</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="k">switch</span> <span class="o">(</span><span class="n">type</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="k">case</span> <span class="nl">JSON_RPC:</span>
</span><span class='line'>              <span class="n">typeName</span> <span class="o">=</span> <span class="s">&quot;Json Rpc&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="nl">REQUEST_FACTORY:</span>
</span><span class='line'>              <span class="n">typeName</span> <span class="o">=</span> <span class="s">&quot;Request Fatory&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="k">case</span> <span class="nl">REST:</span>
</span><span class='line'>              <span class="n">typeName</span> <span class="o">=</span> <span class="s">&quot;Restlet&quot;</span><span class="o">;</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">default</span><span class="o">:</span>
</span><span class='line'>              <span class="k">break</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="o">(</span><span class="n">result</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">StringBuilder</span> <span class="n">str</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>              <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Type : &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">typeName</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Time : &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">String</span><span class="o">.</span><span class="na">valueOf</span><span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">time</span><span class="o">)).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;ms \n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Object A : &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="n">IObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="n">result</span><span class="o">.</span><span class="na">getObjectB</span><span class="o">();</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">objB</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="k">if</span> <span class="o">(</span><span class="n">objB</span> <span class="k">instanceof</span> <span class="n">IObjectBMap</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Object B Map : &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">objB</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>                      <span class="k">if</span> <span class="o">(((</span><span class="n">IObjectBMap</span><span class="o">)</span> <span class="n">objB</span><span class="o">).</span><span class="na">getMap</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                          <span class="k">for</span> <span class="o">(</span><span class="n">Entry</span> <span class="n">entry</span> <span class="o">:</span> <span class="o">((</span><span class="n">IObjectBMap</span><span class="o">)</span> <span class="n">objB</span><span class="o">).</span><span class="na">getMap</span><span class="o">().</span><span class="na">entrySet</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                              <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;-&amp;gt; : Key&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot; : &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>                          <span class="o">}</span>
</span><span class='line'>                      <span class="o">}</span>
</span><span class='line'>                  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Object B: &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">objB</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">()</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">||</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">size</span><span class="o">()</span> <span class="o">==</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Nb objects B: &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Nb objects B: &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">size</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="k">for</span> <span class="o">(</span><span class="n">IObjectB</span> <span class="n">objBTmp</span> <span class="o">:</span> <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">str</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;--&amp;gt; &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">objBTmp</span><span class="o">.</span><span class="na">getName</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="n">text</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">str</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
</span><span class='line'>          <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">text</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&quot;Failure during getting result&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>          <span class="n">btn</span><span class="o">.</span><span class="na">setEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have to create the <strong>tabs.xml</strong></a> in the layouts of our android app. Have a look at the <a href="https://github.com/binomed/android_sandbox/blob/master/RpcTests/TestRpcAndroid/res/layout/tabs.xml" target="_blank">source code</a></p>

<p>And we have to configure the AndroidManifest.xml with the activity and correct authorizations :</p>

<figure class='code'><figcaption><span>AndroidManifest.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">package=</span><span class="s">&quot;com.binomed.rpc&quot;</span>
</span><span class='line'>    <span class="na">android:versionCode=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>    <span class="na">android:versionName=</span><span class="s">&quot;1.0&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;uses-sdk</span> <span class="na">android:minSdkVersion=</span><span class="s">&quot;4&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;application</span>
</span><span class='line'>        <span class="na">android:icon=</span><span class="s">&quot;@drawable/ic_launcher&quot;</span>
</span><span class='line'>        <span class="na">android:label=</span><span class="s">&quot;@string/app_name&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;activity</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;.AndroidRpcProjectActivity&quot;</span> <span class="na">label=</span><span class="s">&quot;@string/app_name&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>            <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>                <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.action.MAIN&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;android.intent.category.LAUNCHER&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/activity&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/application&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/manifest&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have to add the authorization <strong>&#8220;android.permission.INTERNET&#8221;</strong> in order to do the http calls with our server.  Let&#8217;s now start to implement each solution</p>

<h2>JSON  RPC</h2>


<h3>Required libraries</h3>


<p>For Json RPC we need thoses libraries :</p>

<ul>
    <li><a href="http://sourceforge.net/projects/java-json-rpc/files/" target="_blank">java-json-rpc.jar</a></li>
    <li><a href="http://logging.apache.org/log4j/1.2/download.html" target="_blank">log4j.jar</a></li>
    <li><a href="http://wiki.fasterxml.com/JacksonDownload" target="_blank">jackson-core and jackson-mapper</a></li>
</ul>


<p>&nbsp;</p>

<p>We have to add thoses libraries in the both projects. <em><strong>Right Click -&gt; BuildPath -&gt; Configure Build Path -&gt; tab Libraries, button &#8220;add JARs&#8230;&#8221;</strong></em></p>

<p><img src="http://binomed.github.com/images/2012-03-15/libJsonRpc.jpg"></p>

<p>&nbsp;</p>

<h3>Server Side</h3>


<p>Now let&#8217;s create all classes used for the data transfer.</p>

<p>The communication between the two entities for this framework is based on proxy class generated by the framework. So we have to define an interface to offer services to client.  In order to the client could reuse this interface we have to create it in the shared folder on the server project.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">javajsonrpc</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IJavaJsonRpcService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">(</span><span class="n">JavaJsonRpcObjectB</span> <span class="n">parameter</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This interface use 2 classes  JavaJsonRpcObjectA and JavaJsonRpcObjectB which are classes that implement the previously seen interfaces. Those classes are serializable and are created on the shared folder on server side. The interface is<strong> mandatory</strong>. It is used also on the client side for the proxy.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">javajsonrpc</span><span class="o">.</span><span class="na">dto</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaJsonRpcObjectA</span> <span class="kd">implements</span> <span class="n">IObjectA</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">JavaJsonRpcObjectA</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">JavaJsonRpcObjectB</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">JavaJsonRpcObjectB</span> <span class="nf">getObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setObjectB</span><span class="o">(</span><span class="n">JavaJsonRpcObjectB</span> <span class="n">objectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">objectB</span> <span class="o">=</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">List</span> <span class="nf">getListObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setListObjectB</span><span class="o">(</span><span class="n">List</span> <span class="n">listObjectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">listObjectB</span> <span class="o">=</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">javajsonrpc</span><span class="o">.</span><span class="na">dto</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaJsonRpcObjectB</span> <span class="kd">implements</span> <span class="n">IObjectBMap</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">JavaJsonRpcObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">HashMap</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">HashMap</span> <span class="nf">getMap</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMap</span><span class="o">(</span><span class="n">HashMap</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">map</span> <span class="o">=</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNum</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">num</span> <span class="o">=</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Normally at this moment you should have this package herachy :</p>

<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/jsonClientServerShared.jpg"></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>We now have to create the service on server side and configure it :</p>

<p>We create an implementation of our service on the main src folder of server :</p>

<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/jsonClientServerSrc.jpg"></p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">javajsonrpc</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaJsonRpcService</span> <span class="kd">implements</span> <span class="n">IJavaJsonRpcService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">JavaJsonRpcObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectB&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setMap</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">());</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">getMap</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;key&quot;</span><span class="o">,</span> <span class="s">&quot;value&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">JavaJsonRpcObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">(</span><span class="n">JavaJsonRpcObjectB</span> <span class="n">parameter</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">JavaJsonRpcObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;WithParameter&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">parameter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">parameter</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="o">(</span><span class="n">parameter</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">parameter</span><span class="o">.</span><span class="na">getNum</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">parameter</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the class isn’t a servlet, it is just a simple bean which implements the interface of our service. All the mapping is done in <strong>web.xml</strong>. Add this code in your web.xml :</p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- Java-Json-RPC --&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet-name&gt;</span>JsonRpcServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-class&gt;</span>cz.eman.jsonrpc.server.JsonRpcServlet<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-name&gt;</span>javajsonrpc<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>com.binomed.server.rpc.javajsonrpc.JavaJsonRpcService<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>JsonRpcServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/jsonrpc/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet-mapping&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the framework has it’s own servlet which manage all redirections. We have only to declare all services that we expose.</p>

<p>That’s all for the server ! pretty easy isn’t it ? Let’s have a look at the client side now.</p>

<h3>Client Side</h3>


<p>As said previously, the framework Java JSON RPC use a proxy system. The Proxy class have to inherit from <em><strong>cz.eman.jsonrpc.client.AbstractClientProxy</strong></em></p>

<p><img src="http://binomed.github.com/images/2012-03-15/jsonClientClientSrc.jpg"></p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">javajsonrpc</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JavaJsonRpcServiceProxy</span> <span class="kd">extends</span> <span class="n">AbstractClientProxy</span> <span class="kd">implements</span> <span class="n">IJavaJsonRpcService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">JavaJsonRpcServiceProxy</span><span class="o">(</span><span class="n">ClientProvider</span> <span class="n">clientProvider</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">(</span><span class="n">IJavaJsonRpcService</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">clientProvider</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">JavaJsonRpcObjectA</span><span class="o">)</span> <span class="kd">super</span><span class="o">.</span><span class="na">callMethod</span><span class="o">(</span><span class="s">&quot;getMessage&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">JavaJsonRpcObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">(</span><span class="n">JavaJsonRpcObjectB</span> <span class="n">parameter</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">JsonParseException</span><span class="o">,</span> <span class="n">JsonMappingException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="n">JavaJsonRpcObjectA</span><span class="o">)</span> <span class="kd">super</span><span class="o">.</span><span class="na">callMethod</span><span class="o">(</span><span class="s">&quot;getMessageWithParameter&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="n">Object</span><span class="o">[]</span> <span class="o">{</span> <span class="n">parameter</span> <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You have to specify the name of server method to call and manage parameters like in java introspection. For example : for a method without parameters you have to passed an empty array.</p>

<p>To call the server, you just have to instanciate the proxy with an instance of <strong>cz.eman.jsonrpc.client.HttpJsonClient</strong> and called it. You have to integrate this code in AsyncTask code</p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">case</span> <span class="nl">JSON_RPC:</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">JavaJsonRpcServiceProxy</span> <span class="n">proxy</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcServiceProxy</span><span class="o">(</span><span class="k">new</span> <span class="n">HttpJsonClient</span><span class="o">(</span><span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">LOCALHOST</span> <span class="o">+</span> <span class="s">&quot;/jsonrpc/javajsonrpc&quot;</span><span class="o">)));</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">nbParams</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">=</span> <span class="n">proxy</span><span class="o">.</span><span class="na">getMessage</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">JavaJsonRpcObjectB</span> <span class="n">paramB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">paramB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;Name From Json RPC&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">paramB</span><span class="o">.</span><span class="na">setMap</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">());</span>
</span><span class='line'>      <span class="n">paramB</span><span class="o">.</span><span class="na">getMap</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;key&quot;</span><span class="o">,</span> <span class="s">&quot;value&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">paramB</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">nbParams</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">=</span> <span class="n">proxy</span><span class="o">.</span><span class="na">getMessageWithParameter</span><span class="o">(</span><span class="n">paramB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the implementation is pretty simple.</p>

<h2>Request Factory</h2>


<p>All this part will be done by creating a project with <a href="http://code.google.com/intl/fr-FR/eclipse/docs/appengine_connected_android.html" target="_blank">appengine-android plugin</a> and removing all unnecessary code and libraries.</p>

<h3>Required libraries and configurations</h3>


<p>For Request Factory we need the</p>

<ul>
    <li><a href="https://github.com/binomed/android_sandbox/blob/master/RpcTests/TestRpcAndroid/lib/requestfactory-client.jar?raw=true" target="_blank">requestfactory-client.jar</a> and <a href="https://github.com/binomed/android_sandbox/blob/master/RpcTests/TestRpcAndroid/lib/validation-api-1.0.0.GA.jar?raw=true" target="_blank">validation-api-1.0.0.GA.jar</a> for client part.</li>
    <li><a href="https://github.com/binomed/android_sandbox/blob/master/RpcTests/TestRpcAndroid/lib/validation-api-1.0.0.GA.jar?raw=true" target="_blank">validation-api-1.0.0.GA.jar</a> for server part.</li>
</ul>


<p>The server have to be configure for GWT and AppEngine  : <em><strong>Rick Click -&gt;Properties -&gt;  Google -&gt; AppEngine (Use SDK 1.6.1)</strong></em> and <em><strong>Rick Click -&gt;Properties -&gt;  Google -&gt; Web Toolkit (Use 2.4)</strong></em></p>

<p>If you want to use request factory you have to enable the gwt <a href="http://code.google.com/p/google-web-toolkit/wiki/RequestFactoryInterfaceValidation#ValidationTool" target="_blank">validation tools</a>. This is <span style="color: #ff0000;"><strong>mandatory for compilation and error resolution</strong></span>. Here is what you have to do for enabled this.</p>

<h4>Validation Tools</h4>


<p>On the both project you have to do this.</p>

<p><em><strong>Rick Click -&gt; Properties -&gt; Java Compiler -&gt; Annotation Processing</strong></em></p>

<p>You have to have the same screen as this :</p>

<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/validation-Tools.jpg"></p>

<p>&nbsp;</p>

<p>Don&#8217;t forget the <strong><span style="color: #ff0000;">key verbose, it is mandatory !</span></strong></p>

<p>Now you have to referenced the factory path (path to jar that do the validation). On the same screen, click on &#8221;<strong>Factory Path</strong>&#8221; and choose the path to the jar &#8221;<strong>requestfactory-apt.jar</strong>&#8221; which is <em><strong>$YOUR_ECLIPSE_PATH/plugins/com.google.gwt.eclipse.sdkbundle_2.4.0.$NUMBER_OF_REVISION/gwt-2.4.0/requestfactory-apt.jar</strong></em></p>

<h3>Gwt configuration</h3>


<p>As we are using the gwt plugin we have to delcare an <strong>entry point</strong> and an application :  Thoses classes are declared on the server side in the main <strong>src folder</strong> under <strong>com.binomed.server.requestfactory</strong>. See <a href="https://github.com/binomed/android_sandbox/blob/master/RpcTests/TestRpcAppEngine/src/com/binomed/server/requestfactory" target="_blank">the source</a>
&nbsp;</p>

<h3>Server Side</h3>


<p>The request factory framework is based on interfaces.  Those interfaces are the exposed part of server to the client. So all this code is in the <strong>shared folder</strong>. All the implentations are only on the server side (src part)</p>

<p>The main interface inherits from<em><strong> RequestFactory</strong></em> and list all services (other interfaces) offered by the server. Each service is an interface. Each manipulated bean is exposed as an interface.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">requestfactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">MyRequestFactory</span> <span class="kd">extends</span> <span class="n">RequestFactory</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@ServiceName</span><span class="o">(</span><span class="s">&quot;com.binomed.server.requestfactory.RequestFactoryObjectB&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">interface</span> <span class="nc">HelloWorldRequest</span> <span class="kd">extends</span> <span class="n">RequestContext</span> <span class="o">{</span>
</span><span class='line'>      <span class="cm">/**</span>
</span><span class='line'><span class="cm">      * Retrieve a &quot;Hello, World&quot; message from the server.</span>
</span><span class='line'><span class="cm">      */</span>
</span><span class='line'>      <span class="n">Request</span> <span class="nf">getMessage</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">InstanceRequest</span> <span class="nf">getMessageWithParameter</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">HelloWorldRequest</span> <span class="nf">helloWorldRequest</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>For this tutorial, our request factory only exposes one service HelloWorlRequest which has 2 methods.</p>

<p>As you can see there are annotations for specifying the implementation class of our service. The path describes the package and class name that implements the service.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">requestfactory</span><span class="o">.</span><span class="na">shared</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@ProxyForName</span><span class="o">(</span><span class="s">&quot;com.binomed.server.requestfactory.RequestFactoryObjectA&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">RequestFactoryObjectAProxy</span> <span class="kd">extends</span> <span class="n">ValueProxy</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">RequestFactoryObjectBProxy</span> <span class="nf">getObjectB</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setObjectB</span><span class="o">(</span><span class="n">RequestFactoryObjectBProxy</span> <span class="n">objectB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">List</span> <span class="nf">getListObjectB</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setListObjectB</span><span class="o">(</span><span class="n">List</span> <span class="n">listObjectB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">String</span> <span class="nf">getName</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">requestfactory</span><span class="o">.</span><span class="na">shared</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@ProxyForName</span><span class="o">(</span><span class="s">&quot;com.binomed.server.requestfactory.RequestFactoryObjectB&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">RequestFactoryObjectBProxy</span> <span class="kd">extends</span> <span class="n">ValueProxy</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">String</span> <span class="nf">getName</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">int</span> <span class="nf">getNum</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">setNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Those interfaces inherits from <a href="http://code.google.com/intl/fr/webtoolkit/doc/latest/DevGuideRequestFactory.html#valueProxies" target="_blank">ValueProxy</a> in order to the frameworks understand that it is a transportable bean. Those beans have some restrictions concerning their types : for example, you could not have the Map type. For more information, please have a look at this <a href="http://code.google.com/intl/fr-FR/webtoolkit/doc/latest/DevGuideRequestFactory.html#transportable" target="_blank">page</a>. As for the service, we have to specify the implementation class of our beans.</p>

<p>Normally you should have this structure :</p>

<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/requestFacotryClientServerShared.jpg">
</a></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>Now let&#8217;s have a look to the implementations of thoses interfaces.</p>

<p>First we will look at the beans :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">requestfactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RequestFactoryObjectA</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">RequestFactoryObjectA</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">RequestFactoryObjectB</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">RequestFactoryObjectB</span> <span class="nf">getObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setObjectB</span><span class="o">(</span><span class="n">RequestFactoryObjectB</span> <span class="n">objectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">objectB</span> <span class="o">=</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">List</span> <span class="nf">getListObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setListObjectB</span><span class="o">(</span><span class="n">List</span> <span class="n">listObjectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">listObjectB</span> <span class="o">=</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">requestfactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RequestFactoryObjectB</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">RequestFactoryObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNum</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">num</span> <span class="o">=</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * Service Part</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RequestFactoryObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RequestFactoryObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RequestFactoryObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectB&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RequestFactoryObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RequestFactoryObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">RequestFactoryObjectB</span><span class="o">&gt;());</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">RequestFactoryObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RequestFactoryObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RequestFactoryObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;WithParameter&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RequestFactoryObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RequestFactoryObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">num</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">RequestFactoryObjectB</span><span class="o">&gt;());</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">num</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>You have noticed that the implementation of service is included in the bean.</p>

<p>The implementation of interface is not mandatory because you have specified on interfaces what are the implementation classes. Nothing else is needed. But you have not</p>

<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/requestFacotryClientServerSrc.jpg"></p>

<p>&nbsp;</p>

<p>Finally we have to declare the servlet in <strong>web.xml</strong> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- Request Factory--&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet-name&gt;</span>requestFactoryServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-class&gt;</span>com.google.web.bindery.requestfactory.server.RequestFactoryServlet<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param-name&gt;</span>symbolMapsDirectory<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>        <span class="nt">&lt;param-value&gt;</span>WEB-INF/classes/symbolMaps/<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>  
</span><span class='line'>    <span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>requestFactoryServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/gwtRequest<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/servlet-mapping&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you’re code is not compiling, you maybe have to clean all your projects in order to refresh and be sure that the validation tools is well executed.</p>

<h3>Client Side</h3>


<p>The client side is pretty complex because you have to define utility classes for the communication.</p>

<ul>
    <li>Utils :  Communication configuration and preparing generic service.</li>
    <li>AndroidRequestTransport : Class used for communication in requestFactory process</li>
</ul>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">requestFactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Utility methods for getting the base URL for client-server communication and retrieving shared preferences.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Util</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Tag for logging.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;Util&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Shared constants</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Value for {@link #CONNECTION_STATUS} key.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">CONNECTING</span> <span class="o">=</span> <span class="s">&quot;connecting&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * URL suffix for the RequestFactory servlet.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">RF_METHOD</span> <span class="o">=</span> <span class="s">&quot;/gwtRequest&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">LOCALHOST</span> <span class="o">=</span> <span class="s">&quot;http://10.0.2.2:8888&quot;</span><span class="o">;</span> <span class="c1">//$NON-NLS-1$</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Creates and returns an initialized {@link RequestFactory} of the given type.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span>  <span class="n">T</span> <span class="nf">getRequestFactory</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Class</span> <span class="n">factoryClass</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">T</span> <span class="n">requestFactory</span> <span class="o">=</span> <span class="n">RequestFactorySource</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">factoryClass</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">authCookie</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">uriString</span> <span class="o">=</span> <span class="n">LOCALHOST</span> <span class="o">+</span> <span class="n">RF_METHOD</span><span class="o">;</span>
</span><span class='line'>      <span class="n">URI</span> <span class="n">uri</span><span class="o">;</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">uri</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URI</span><span class="o">(</span><span class="n">uriString</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">URISyntaxException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Log</span><span class="o">.</span><span class="na">w</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Bad URI: &quot;</span> <span class="o">+</span> <span class="n">uriString</span><span class="o">,</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">requestFactory</span><span class="o">.</span><span class="na">initialize</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleEventBus</span><span class="o">(),</span> <span class="k">new</span> <span class="n">AndroidRequestTransport</span><span class="o">(</span><span class="n">uri</span><span class="o">,</span> <span class="n">authCookie</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">requestFactory</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">requestFactory</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * An implementation of RequestTransport for use between an Android client and a</span>
</span><span class='line'><span class="cm"> * Google AppEngine server.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AndroidRequestTransport</span> <span class="kd">implements</span> <span class="n">RequestTransport</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">URI</span> <span class="n">uri</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">cookie</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Constructs an AndroidRequestTransport instance.</span>
</span><span class='line'><span class="cm">     *</span>
</span><span class='line'><span class="cm">     * @param uri the URI for the RequestFactory service</span>
</span><span class='line'><span class="cm">     * @param cookie the ACSID or SACSID cookie used for authentication</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">AndroidRequestTransport</span><span class="o">(</span><span class="n">URI</span> <span class="n">uri</span><span class="o">,</span> <span class="n">String</span> <span class="n">cookie</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">uri</span> <span class="o">=</span> <span class="n">uri</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">cookie</span> <span class="o">=</span> <span class="n">cookie</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">send</span><span class="o">(</span><span class="n">String</span> <span class="n">payload</span><span class="o">,</span> <span class="n">TransportReceiver</span> <span class="n">receiver</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">HttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DefaultHttpClient</span><span class="o">();</span>
</span><span class='line'>        <span class="n">HttpPost</span> <span class="n">post</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HttpPost</span><span class="o">();</span>
</span><span class='line'>        <span class="n">post</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Content-Type&quot;</span><span class="o">,</span> <span class="s">&quot;application/json;charset=UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">post</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Cookie&quot;</span><span class="o">,</span> <span class="n">cookie</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">post</span><span class="o">.</span><span class="na">setURI</span><span class="o">(</span><span class="n">uri</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Throwable</span> <span class="n">ex</span><span class="o">;</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">post</span><span class="o">.</span><span class="na">setEntity</span><span class="o">(</span><span class="k">new</span> <span class="n">StringEntity</span><span class="o">(</span><span class="n">payload</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">));</span>
</span><span class='line'>            <span class="n">HttpResponse</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">execute</span><span class="o">(</span><span class="n">post</span><span class="o">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">(</span><span class="mi">200</span> <span class="o">==</span> <span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">().</span><span class="na">getStatusCode</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">String</span> <span class="n">contents</span> <span class="o">=</span> <span class="n">readStreamAsString</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getEntity</span><span class="o">().</span><span class="na">getContent</span><span class="o">());</span>
</span><span class='line'>                <span class="n">receiver</span><span class="o">.</span><span class="na">onTransportSuccess</span><span class="o">(</span><span class="n">contents</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">receiver</span><span class="o">.</span><span class="na">onTransportFailure</span><span class="o">(</span><span class="k">new</span> <span class="n">ServerFailure</span><span class="o">(</span><span class="n">response</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">()</span>
</span><span class='line'>                        <span class="o">.</span><span class="na">getReasonPhrase</span><span class="o">()));</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ex</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ClientProtocolException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ex</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ex</span> <span class="o">=</span> <span class="n">e</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">receiver</span><span class="o">.</span><span class="na">onTransportFailure</span><span class="o">(</span><span class="k">new</span> <span class="n">ServerFailure</span><span class="o">(</span><span class="n">ex</span><span class="o">.</span><span class="na">getMessage</span><span class="o">()));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/**</span>
</span><span class='line'><span class="cm">     * Reads an entire input stream as a String. Closes the input stream.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="nf">readStreamAsString</span><span class="o">(</span><span class="n">InputStream</span> <span class="n">in</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">ByteArrayOutputStream</span> <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ByteArrayOutputStream</span><span class="o">(</span><span class="mi">1024</span><span class="o">);</span>
</span><span class='line'>            <span class="kt">byte</span><span class="o">[]</span> <span class="n">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>            <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>            <span class="k">do</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">count</span> <span class="o">=</span> <span class="n">in</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">buffer</span><span class="o">);</span>
</span><span class='line'>                <span class="k">if</span> <span class="o">(</span><span class="n">count</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">out</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">buffer</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">count</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">while</span> <span class="o">(</span><span class="n">count</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;=</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>            <span class="k">return</span> <span class="n">out</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">UnsupportedEncodingException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">RuntimeException</span><span class="o">(</span><span class="s">&quot;The JVM does not support the compiler&#39;s default encoding.&quot;</span><span class="o">,</span>
</span><span class='line'>                    <span class="n">e</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">in</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">ignored</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now let&#8217;s have a look at the call of this service :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">case</span> <span class="nl">REQUEST_FACTORY:</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Thread</span><span class="o">.</span><span class="na">currentThread</span><span class="o">().</span><span class="na">setContextClassLoader</span><span class="o">(</span><span class="n">mContext</span><span class="o">.</span><span class="na">getClassLoader</span><span class="o">());</span>
</span><span class='line'>  <span class="n">MyRequestFactory</span> <span class="n">requestFactory</span> <span class="o">=</span> <span class="n">Util</span><span class="o">.</span><span class="na">getRequestFactory</span><span class="o">(</span><span class="n">mContext</span><span class="o">,</span> <span class="n">MyRequestFactory</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="kd">final</span> <span class="n">HelloWorldRequest</span> <span class="n">request</span> <span class="o">=</span> <span class="n">requestFactory</span><span class="o">.</span><span class="na">helloWorldRequest</span><span class="o">();</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">nbParams</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="na">getMessage</span><span class="o">().</span><span class="na">fire</span><span class="o">(</span><span class="k">new</span> <span class="n">Receiver</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">ServerFailure</span> <span class="n">error</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Failure with request factory request : &quot;</span> <span class="o">+</span> <span class="n">error</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>              <span class="n">message</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">RequestFactoryObjectAProxy</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">JavaJsonRpcObjectA</span> <span class="n">objA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectA</span><span class="o">();</span>
</span><span class='line'>              <span class="n">objA</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getObjectB</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">JavaJsonRpcObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getObjectB</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">size</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">JavaJsonRpcObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                  <span class="n">objA</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>                  <span class="k">for</span> <span class="o">(</span><span class="n">RequestFactoryObjectBProxy</span> <span class="n">objBProxy</span> <span class="o">:</span> <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>                      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">objBProxy</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>                      <span class="n">objA</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// message = result;</span>
</span><span class='line'>              <span class="n">message</span> <span class="o">=</span> <span class="n">objA</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">RequestFactoryObjectBProxy</span> <span class="n">parameterB</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">RequestFactoryObjectBProxy</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>      <span class="n">parameterB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;Name from request factory&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">parameterB</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">nbParams</span><span class="o">);</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="na">getMessageWithParameter</span><span class="o">().</span><span class="na">using</span><span class="o">(</span><span class="n">parameterB</span><span class="o">).</span><span class="na">fire</span><span class="o">(</span><span class="k">new</span> <span class="n">Receiver</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="n">ServerFailure</span> <span class="n">error</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;Failure with request factory request : &quot;</span> <span class="o">+</span> <span class="n">error</span><span class="o">.</span><span class="na">getMessage</span><span class="o">());</span>
</span><span class='line'>              <span class="n">message</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onSuccess</span><span class="o">(</span><span class="n">RequestFactoryObjectAProxy</span> <span class="n">result</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">JavaJsonRpcObjectA</span> <span class="n">objA</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectA</span><span class="o">();</span>
</span><span class='line'>              <span class="n">objA</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getObjectB</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">JavaJsonRpcObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>                  <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getObjectB</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              <span class="k">if</span> <span class="o">((</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="o">(</span><span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">size</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">JavaJsonRpcObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>                  <span class="n">objA</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>                  <span class="k">for</span> <span class="o">(</span><span class="n">RequestFactoryObjectBProxy</span> <span class="n">objBProxy</span> <span class="o">:</span> <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>                      <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JavaJsonRpcObjectB</span><span class="o">();</span>
</span><span class='line'>                      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">objBProxy</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>                      <span class="n">objA</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>                  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// message = result;</span>
</span><span class='line'>              <span class="n">message</span> <span class="o">=</span> <span class="n">objA</span><span class="o">;</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">=</span> <span class="n">message</span><span class="o">;</span>
</span><span class='line'>  <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We have to use Reciever as for RPC mecanism in order to know when the server gives it’s response. The call of service is done by getting a proxy of service and by invocking the fire() method on it.<span style="color: #ff0000;"><strong> Warning : </strong></span>The call of a fire method is not asynchrone.</p>

<p>You have to notice that normaly Request Factory is very usefull for CRUD and is oriented to be a JPA framework for server. This could explain why there are so many configuration classes.</p>

<h2>Restlet</h2>


<h3>Required libraries and configurations</h3>


<p>For Rest we need to download <a href="http://www.restlet.org/downloads/2.1/restlet-gae-2.1rc3.zip" target="_blank">restlet-appEngine</a> and <a href="http://www.restlet.org/downloads/2.1/restlet-android-2.1rc3.zip" target="_blank">restlet-android</a>.</p>

<p>For the android side, we need the libraries available in previous zip file :</p>

<ul>
    <li>org.restlet.jar</li>
    <li>org.restlet.ext.jackson.jar</li>
    <li>org.restlet.ext.httpclient.jar</li>
    <li>org.apache.commons.codec_1.5</li>
    <li>org.apache.httpclient_4.1</li>
    <li>org.apache.httpcore_4.1</li>
    <li>org.apache.httpmime_4.1</li>
    <li>org.apache.commons.logging_1.1</li>
    <li>org.apache.james.mime4j_0.6</li>
    <li>org.codehaus.jackson.core_1.9</li>
    <li>org.codehaus.jackson.mapper_1.9</li>
</ul>


<p>For the appEngine , we need the libraries available in previous zip file :</p>

<ul>
    <li>org.restlet.jar</li>
    <li>org.restlet.ext.jackson</li>
    <li>org.codehaus.jackson.core_1.9</li>
    <li>org.codehaus.jackson.mapper_1.9</li>
    <li>org.restlet.ext.json</li>
    <li>org.json_2.0</li>
    <li>org.restlet.ext.servlet</li>
</ul>


<p>&nbsp;</p>

<p>We need all those libraries on android side due to a bug with the http client, so we have to add the httpclient extension.</p>

<h3>Server Side</h3>


<p>On the server side we need to configure the Restlet resources and beans.</p>

<p>The resources will be interfaces in order to be shared by client side. The beans will be simple serializable POJO. Those classes are on the shared folder</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IRestletService</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Get</span>
</span><span class='line'>  <span class="n">RestletObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IRestletServiceParam</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Post</span>
</span><span class='line'>  <span class="n">RestletObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">(</span><span class="n">RestletObjectB</span> <span class="n">parameter</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>And will have 2 beans</p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rest</span><span class="o">.</span><span class="na">dto</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestletObjectA</span> <span class="kd">implements</span> <span class="n">IObjectA</span><span class="o">,</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">RestletObjectA</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">RestletObjectB</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">List</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">RestletObjectB</span> <span class="nf">getObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setObjectB</span><span class="o">(</span><span class="n">RestletObjectB</span> <span class="n">objectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">objectB</span> <span class="o">=</span> <span class="n">objectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">List</span> <span class="nf">getListObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setListObjectB</span><span class="o">(</span><span class="n">List</span> <span class="n">listObjectB</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">listObjectB</span> <span class="o">=</span> <span class="n">listObjectB</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">rest</span><span class="o">.</span><span class="na">dto</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestletObjectB</span> <span class="kd">implements</span> <span class="n">IObjectBMap</span><span class="o">,</span> <span class="n">Serializable</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  *</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">long</span> <span class="n">serialVersionUID</span> <span class="o">=</span> <span class="mi">1L</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">RestletObjectB</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">HashMap</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">HashMap</span> <span class="nf">getMap</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setMap</span><span class="o">(</span><span class="n">HashMap</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">map</span> <span class="o">=</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNum</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNum</span><span class="o">(</span><span class="kt">int</span> <span class="n">num</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">num</span> <span class="o">=</span> <span class="n">num</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/restClientServerShared.jpg"></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p>Now let’s have a look at the implementation. With Restlet we need to declare a<strong> Rest Application</strong>. This application will list all resources in order to expose rest service on server. The application has to extends <strong>org.restlet.Application</strong></p>

<p>&nbsp;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestletApplication</span> <span class="kd">extends</span> <span class="n">Application</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/**</span>
</span><span class='line'><span class="cm">  * Creates a root Restlet that will receive all incoming calls.</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Restlet</span> <span class="nf">createInboundRoot</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="c1">// Create a router Restlet that routes each call to a</span>
</span><span class='line'>      <span class="n">Router</span> <span class="n">router</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Router</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">router</span><span class="o">.</span><span class="na">attach</span><span class="o">(</span><span class="s">&quot;/test&quot;</span><span class="o">,</span> <span class="n">RestResource</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>      <span class="n">router</span><span class="o">.</span><span class="na">attach</span><span class="o">(</span><span class="s">&quot;/testParam&quot;</span><span class="o">,</span> <span class="n">RestResourceParam</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">router</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<p>And we have to declare the resources. A resource always herits from <strong>org.restlet.resource.ServerResource</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestResource</span> <span class="kd">extends</span> <span class="n">ServerResource</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Get</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">RestletObjectA</span> <span class="nf">getMessage</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">RestletObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RestletObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectB&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setMap</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">());</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">getMap</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;key&quot;</span><span class="o">,</span> <span class="s">&quot;value&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RestletObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RestletObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;ObjectA&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>and</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">server</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestResourceParam</span> <span class="kd">extends</span> <span class="n">ServerResource</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Post</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">RestletObjectA</span> <span class="nf">getMessageWithParameter</span><span class="o">(</span><span class="n">RestletObjectB</span> <span class="n">parameter</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">RestletObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RestletObjectA</span><span class="o">();</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;WithParameter&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">result</span><span class="o">.</span><span class="na">setObjectB</span><span class="o">(</span><span class="n">parameter</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="o">((</span><span class="n">parameter</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;&amp;</span><span class="n">amp</span><span class="o">;</span> <span class="o">(</span><span class="n">parameter</span><span class="o">.</span><span class="na">getNum</span><span class="o">()</span> <span class="o">&amp;</span><span class="n">gt</span><span class="o">;</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">result</span><span class="o">.</span><span class="na">setListObjectB</span><span class="o">(</span><span class="k">new</span> <span class="n">ArrayList</span><span class="o">());</span>
</span><span class='line'>          <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="o">;</span> <span class="n">parameter</span><span class="o">.</span><span class="na">getNum</span><span class="o">();</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
</span><span class='line'>              <span class="n">result</span><span class="o">.</span><span class="na">getListObjectB</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="n">parameter</span><span class="o">);</span>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We now have to declare the application in the <strong>web.xml</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="c">&lt;!-- RESTLET --&gt;</span>
</span><span class='line'>  
</span><span class='line'>   <span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>            <span class="nt">&lt;servlet-name&gt;</span>RestletServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>            <span class="nt">&lt;servlet-class&gt;</span>org.restlet.ext.servlet.ServerServlet<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'>            <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;param-name&gt;</span>org.restlet.application<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>                    <span class="nt">&lt;param-value&gt;</span>com.binomed.server.rest.RestletApplication<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>RestletServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/rest/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet-mapping&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<p><img src="http://binomed.github.com/images/2012-03-15/restClientServerSrc.jpg"></p>

<p>&nbsp;</p>

<p>Thats all for the server side.</p>

<h3>Client Side</h3>


<p>The client side is very easy to implement. We only have to instantiate some <strong>org.restlet.resource.ClientResource</strong> and get a proxy generated by the framework corresponding to our service. In order to deport the code complexity, we will create a class for managing all those configurations.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">rpc</span><span class="o">.</span><span class="na">rest</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">RestletAccesClass</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">ClientResource</span> <span class="n">resource</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">ClientResource</span> <span class="n">resourceWithParam</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">IRestletService</span> <span class="n">service</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">IRestletServiceParam</span> <span class="n">serviceWithParam</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">synchronized</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">(</span><span class="n">resource</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredConverters</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JacksonConverter</span><span class="o">());</span>
</span><span class='line'>          <span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredClients</span><span class="o">().</span><span class="na">clear</span><span class="o">();</span>
</span><span class='line'>          <span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredClients</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">HttpClientHelper</span><span class="o">(</span><span class="kc">null</span><span class="o">));</span>
</span><span class='line'>          <span class="n">resource</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClientResource</span><span class="o">(</span><span class="n">AndroidRpcProjectActivity</span><span class="o">.</span><span class="na">LOCALHOST</span> <span class="o">+</span> <span class="s">&quot;/rest/test&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">resourceWithParam</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ClientResource</span><span class="o">(</span><span class="n">AndroidRpcProjectActivity</span><span class="o">.</span><span class="na">LOCALHOST</span> <span class="o">+</span> <span class="s">&quot;/rest/testParam&quot;</span><span class="o">);</span>
</span><span class='line'>          <span class="n">resourceWithParam</span><span class="o">.</span><span class="na">setRequestEntityBuffering</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'>          <span class="n">service</span> <span class="o">=</span> <span class="n">resource</span><span class="o">.</span><span class="na">wrap</span><span class="o">(</span><span class="n">IRestletService</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>          <span class="n">serviceWithParam</span> <span class="o">=</span> <span class="n">resourceWithParam</span><span class="o">.</span><span class="na">wrap</span><span class="o">(</span><span class="n">IRestletServiceParam</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RestletObjectA</span> <span class="nf">callService</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">init</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RestletObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getMessage</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="n">RestletObjectA</span> <span class="nf">callServiceWithParam</span><span class="o">(</span><span class="kt">int</span> <span class="n">nbParams</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">init</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RestletObjectB</span> <span class="n">objB</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RestletObjectB</span><span class="o">();</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">&quot;Name with Rest&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setNum</span><span class="o">(</span><span class="n">nbParams</span><span class="o">);</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">setMap</span><span class="o">(</span><span class="k">new</span> <span class="n">HashMap</span><span class="o">());</span>
</span><span class='line'>      <span class="n">objB</span><span class="o">.</span><span class="na">getMap</span><span class="o">().</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;key&quot;</span><span class="o">,</span> <span class="s">&quot;value&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">RestletObjectA</span> <span class="n">result</span> <span class="o">=</span> <span class="n">serviceWithParam</span><span class="o">.</span><span class="na">getMessageWithParameter</span><span class="o">(</span><span class="n">objB</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="n">result</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<p>those lines :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredConverters</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">JacksonConverter</span><span class="o">());</span>
</span><span class='line'><span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredClients</span><span class="o">().</span><span class="na">clear</span><span class="o">();</span>
</span><span class='line'><span class="n">Engine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">getRegisteredClients</span><span class="o">().</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">HttpClientHelper</span><span class="o">(</span><span class="kc">null</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>Are <span style="color: #ff0000;"><strong>mandatory</strong></span> dues to a bug in rest android client library. We have to force those parameters. As you can see the call of a restlet service is done by calling the method of interface on the generated proxy.</p>

<p>Finally, the integration code in our main Activity :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">case</span> <span class="nl">REST:</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">(</span><span class="n">nbParams</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">=</span> <span class="n">RestletAccesClass</span><span class="o">.</span><span class="na">callService</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">result</span> <span class="o">=</span> <span class="n">RestletAccesClass</span><span class="o">.</span><span class="na">callServiceWithParam</span><span class="o">(</span><span class="n">nbParams</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>&nbsp;</p>

<h1>Tests and results</h1>


<p>&nbsp;</p>

<p>All the results shown after were done with this configuration :</p>

<ul>
    <li>Windows XP SP3</li>
    <li>Intel Core Duo 2.2Ghz</li>
    <li>2Go ram</li>
    <li>Eclipse Indigo with appEngine in local</li>
    <li>Android Emulator under Froyo</li>
</ul>


<h2>Apk Size</h2>


<p>Now let’s look at the impact of each solution on the final size of the APK</p>

<table class="binomed_table">
<tbody>
<tr>
<td></td>
<td><strong>Without Any Framework</strong></td>
<td><strong>Json</strong></td>
<td><strong>Request Factory</strong></td>
<td><strong>Rest</strong></td>
</tr>
<tr>
<td><em>Size</em></td>
<td>36 Ko</td>
<td>1.82 Mo</td>
<td>420 Ko</td>
<td>3.38 Mo</td>
</tr>
</tbody>
</table>


<p>&nbsp;</p>

<h2>Performant</h2>


<p>Here is a comparative table for the average with different number of expected results.</p>

<table class="binomed_table">
<tbody>
<tr>
<td><strong>Number of expected Results</strong></td>
<td><strong>Json</strong></td>
<td><strong>Request Factory</strong></td>
<td><strong>Rest</strong></td>
</tr>
<tr>
<td>1</td>
<td>177 ms</td>
<td>822 ms</td>
<td>632</td>
</tr>
<tr>
<td>10</td>
<td>169 ms and 17 ms / Obj</td>
<td>1167 ms and 117 ms / Obj</td>
<td>678 ms and 68 ms / Obj</td>
</tr>
<tr>
<td>100</td>
<td>377 ms and 3 ms / Obj</td>
<td>3300 ms and 33 ms / Obj</td>
<td>750 ms and 7 ms / Obj</td>
</tr>
<tr>
<td>1000</td>
<td>2644 ms and 3 ms / Obj</td>
<td>24831 ms and 24 ms / Obj</td> 
<td>1266 ms and 1 ms / Obj</td>
</tr>
<tr>
<td>10000</td>
<td>Out of memory Exception</td>
<td>Out of memory Exception</td>
<td>1167 ms and 117 ms / Obj</td>
</tr>
</tbody>
</table>


<p>&nbsp;</p>

<p>&nbsp;</p>

<h1>Conclusion</h1>


<p>&nbsp;</p>

<table class="binomed_table">
<tbody>
<tr>
<td>1:Bad -> 5:Perfect</td>
<td><strong>Json RPC</strong></td>
<td><strong>Request Factory</strong></td>
<td><strong>Rest</strong></td>
</tr>
<tr>
<td><em>Simplicity</em></td>
<td>5</td>
<td>3</td>
<td>5</td>
</tr>
<tr>
<td><em>Use complex objects</em></td>
<td>4</td>
<td>3</td>
<td>4</td>
</tr>
<tr>
<td><em>Effective</em></td>
<td>3</td>
<td>1</td>
<td>5</td>
</tr>
<tr>
<td><em>Impact on APK size</em></td>
<td>3</td>
<td>4</td>
<td>1</td>
</tr>
<tr>
<td><strong>Total</strong></td>
<td><strong>3.75</strong></td>
<td><strong>2.73</strong></td>
<td><strong>3.75</strong></td>
</tr>
</tbody>
</table>


<p>To conclude, you have to study the best way with your own use cases, because all those solutions could be chosen.
&nbsp;
The <b>request factory</b> could be very useful if you want a solution with crud operations.
&nbsp;
The <b>rest</b> solution could be useful if you already have a rest server and if you want to manipulate a hudge quantity of objects. As you can notice, the response time is very low for a high number of POJOs. The Restlet team also says that they are working on an android solution with weightless integration.
&nbsp;
The <b>Java Json Rpc</b> be use for others cases.
&nbsp;
All code of this tutorial is available on my <a href="https://github.com/binomed/android_sandbox/tree/master/RpcTests" target="_blank">github</a></p>

<p>Thank you to Benjamin who helps me for the redaction.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Binomed under Github]]></title>
    <link href="http://binomed.github.com/blog/2011/03/25/binomed-under-github/"/>
    <updated>2011-03-25T23:27:00+01:00</updated>
    <id>http://binomed.github.com/blog/2011/03/25/binomed-under-github</id>
    <content type="html"><![CDATA[<p>Binomed has moved from Google Code to Binomed, you can follow our project on : <a href="https://github.com/organizations/binomed">GitHub</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSGI & Spring DM, mise en place d'un environement equinox (partie 1)]]></title>
    <link href="http://binomed.github.com/blog/2011/02/11/osgi-spring-dm-mise-en-place-dun-environement-equinox-part1/"/>
    <updated>2011-02-11T00:01:00+01:00</updated>
    <id>http://binomed.github.com/blog/2011/02/11/osgi-spring-dm-mise-en-place-dun-environement-equinox-part1</id>
    <content type="html"><![CDATA[<p>Voici mon premier post technologique, je vais tenter d&#8217;être bref concis et d&#8217;aller droit au but.</p>

<p>Pour ce premier post, je vais traiter d&#8217;un sujet que je suis en train d&#8217;essayer de mettre en oeuvre actuellement à savoir OSGI avec Spring DM. <!--more--> Si je créé un article, c&#8217;est par ce que tous les tutoriaux OSGI que l&#8217;on voient traitent de OSGI et Spring DM toujours dans environnement eclipse mais jamais de la mise en place d&#8217;une application OSGI en dehors d&#8217;un environnement eclipse.</p>

<p>Je vais partir du principe que si vous lisez ce post, vous savez déjà ce qu&#8217;est OSGI et spring DM. Si ce n&#8217;est pas le cas, je vous invite a aller voir les sites suivants : <a href="http://www.vogella.de/articles/OSGi/article.html">Tutorial OSGI</a> pour les anglophones et sinon ce site là pour les français : <a href="http://t-templier.developpez.com/tutoriel/java/osgi/osgi1/">Tutorial OSGI fr</a> ainsi que ce site : <a href="http://static.springsource.org/osgi/docs/1.2.x/reference/html/">Spring DM</a>. Pour ce tutoriel, je me suis appuyer sur un autre tutoriel très bien fait : <a href="http://sites.google.com/site/springosgi/">http://sites.google.com/site/springosgi/</a>.J&#8217;aurais encore plein de site à vous partager mais là n&#8217;est pas le sujet.</p>

<p>Commençons donc notre tutoriel.</p>

<h2>Objectifs</h2>

<p>Quels sont les objectifs de ce tutoriel ?</p>

<p>Mettre en oeuvre une application OSGI avec de l&#8217;instanciation automatique de services et la possibilité d&#8217;instancier des beans avec spring.
Pour ce tutoriel, j&#8217;ai choisi le conteneur OSGI equinox. Je verrais pour tester les autres conteneurs plus tard.</p>

<p>voici la liste des prérequis :</p>

<ul>
<li>Avoir <a href="http://maven.apache.org/download.html">Maven </a>d&#8217;installé</li></li>
<li>Avoir la version <a href="http://download.eclipse.org/equinox/">3.6.1 d&#8217;OSGI equinox</a></li></li>
<li>les fichiers disponible sur ce tutoriel de osgi. <a href="http://sites.google.com/site/springosgi/springdm-tutorial.zip">samples</a></li></li>
<li>un <a href="http://www.eclipse.org/downloads/">eclipse helios</a></li></li>
</ul>


<h2>Préparation de l’environnement de développement</h2>

<p>Il faut suivre les étapes décrites <a href="http://sites.google.com/site/springosgi/ch01.html">ici</a>. Ceci vous permettra d&#8217;avoir tous les bundles nécessaires.
Les points 1.2, 1.3 et 1.4 sont ceux à suivre pour notre tutoriel</p>

<h2>Ecriture du bundle</h2>

<p>Nous allons donc créer notre bundle, pour cela dans eclipse,
<img src="http://binomed.github.com/images/2011-02-11/new_project.jpg"></p>

<p>Nous allons lui donner un nom de package ainsi qu&#8217;un nom.</p>

<p><img src="http://binomed.github.com/images/2011-02-11/new_project_1.jpg"></p>

<p><img src="http://binomed.github.com/images/2011-02-11/new_project_2.jpg"></p>

<h3>Création des services</h3>

<p>Nous allons maintenant créé 2 services OSGI très basiques, ces derniers n&#8217;ont en objectif que d&#8217;afficher une chaîne de caractères. L&#8217;idée est de pouvoir instancier un bean avec le scope prototype et l&#8217;autre pas.</p>

<p>Nous allons donc créer les packages et classes suivantes :</p>

<p><img src="http://binomed.github.com/images/2011-02-11/packages_services.jpg"></p>

<p>Voici le code des classes utilisées :</p>

<h4>IClassIOC.java</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">osgi</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">api</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IClassIOC</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">helloWorld</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>IClassIOCPrototype.java</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">osgi</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">api</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IClassIOCPrototype</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kt">void</span> <span class="nf">helloWorld</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>ClassIOC.java</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">osgi</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">impl</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.binomed.osgi.spring.test.api.IClassIOC</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClassIOC</span> <span class="kd">implements</span> <span class="n">IClassIOC</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">ClassIOC</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;LOAD!!!!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">helloWorld</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Spring with OSGI&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>ClassIOCPrototype.java</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">osgi</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">api</span><span class="o">.</span><span class="na">impl</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.binomed.osgi.spring.test.api.IClassIOCPrototype</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClassIOCPrototype</span> <span class="kd">implements</span> <span class="n">IClassIOCPrototype</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="nf">ClassIOCPrototype</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="kd">super</span><span class="o">();</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;LOAD PROTO!!!!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">helloWorld</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello World Spring with OSGI From Proto&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Edition du manifest.mf</h3>

<p>Nous allons maintenant configurer notre manifest.MF afin d&#8217;avoir les bonnes dépendances de bundle.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='properties'><span class='line'><span class="na">Manifest-Version</span><span class="o">:</span> <span class="s">1.0</span>
</span><span class='line'><span class="na">Bundle-ManifestVersion</span><span class="o">:</span> <span class="s">2</span>
</span><span class='line'><span class="na">Bundle-Name</span><span class="o">:</span> <span class="s">OsgiSpringTest</span>
</span><span class='line'><span class="na">Bundle-SymbolicName</span><span class="o">:</span> <span class="s">com.binomed.osgi.spring.test</span>
</span><span class='line'><span class="na">Bundle-Version</span><span class="o">:</span> <span class="s">1.0.0</span>
</span><span class='line'><span class="na">Bundle-Activator</span><span class="o">:</span> <span class="s">com.binomed.osgi.spring.test.Activator</span>
</span><span class='line'><span class="na">Bundle-Vendor</span><span class="o">:</span> <span class="s">binomed</span>
</span><span class='line'><span class="na">Bundle-RequiredExecutionEnvironment</span><span class="o">:</span> <span class="s">JavaSE-1.6</span>
</span><span class='line'><span class="na">Import-Package</span><span class="o">:</span> <span class="s">org.osgi.framework</span>
</span><span class='line'><span class="na">Bundle-ActivationPolicy</span><span class="o">:</span> <span class="s">lazy</span>
</span><span class='line'><span class="na">Require-Bundle</span><span class="o">:</span> <span class="s">org.springframework.context,</span>
</span><span class='line'> <span class="err">org.springframework.beans,</span>
</span><span class='line'> <span class="err">org.springframework.aop,</span>
</span><span class='line'> <span class="err">org.springframework.core</span>
</span></code></pre></td></tr></table></div></figure>


<p>de cette manière on peut distinguer qu&#8217;on sera dépendant de beans, context pour pouvoir instancier notre bean.</p>

<h3>Ecriture des fichiers springs</h3>

<p>Nous allons maintenant créer 2 fichiers spring qui seront reconnus par un bundle et instanciés automatiquement dans notre conteneur OSGI :</p>

<p><img src="http://binomed.github.com/images/2011-02-11/xml_files.jpg"></p>

<p>Ces deux fichiers vont contenir respectivement la description des beans et services osgi à utiliser.</p>

<p>Voici le contenu des 2 fichiers</p>

<h4>applicationContext.xml</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;beans</span>     <span class="na">xmlns=</span><span class="s">&quot;http://www.springframework.org/schema/beans&quot;</span>
</span><span class='line'>      <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>      <span class="na">xmlns:osgi=</span><span class="s">&quot;http://www.springframework.org/schema/osgi&quot;</span>
</span><span class='line'>      <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://www.springframework.org/schema/beans </span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/beans/spring-beans.xsd</span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/osgi </span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/osgi/spring-osgi.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">name=</span><span class="s">&quot;ClassIOC&quot;</span>
</span><span class='line'>      <span class="na">class=</span><span class="s">&quot;com.binomed.osgi.spring.test.api.impl.ClassIOC&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  <span class="nt">&lt;bean</span> <span class="na">name=</span><span class="s">&quot;ClassIOCPrototype&quot;</span>
</span><span class='line'>      <span class="na">scope=</span><span class="s">&quot;prototype&quot;</span>
</span><span class='line'>      <span class="na">class=</span><span class="s">&quot;com.binomed.osgi.spring.test.api.impl.ClassIOCPrototype&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/bean&gt;</span>
</span><span class='line'>  
</span><span class='line'><span class="nt">&lt;/beans&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>applicationContext-osgi.xml</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;beans</span>     <span class="na">xmlns=</span><span class="s">&quot;http://www.springframework.org/schema/beans&quot;</span>
</span><span class='line'>      <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>      <span class="na">xmlns:osgi=</span><span class="s">&quot;http://www.springframework.org/schema/osgi&quot;</span>
</span><span class='line'>      <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://www.springframework.org/schema/beans </span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/beans/spring-beans.xsd</span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/osgi </span>
</span><span class='line'><span class="s">                          http://www.springframework.org/schema/osgi/spring-osgi.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;osgi:service</span>    <span class="na">id=</span><span class="s">&quot;ClassIOCOsgi&quot;</span>
</span><span class='line'>              <span class="na">ref=</span><span class="s">&quot;ClassIOC&quot;</span>
</span><span class='line'>              <span class="na">interface=</span><span class="s">&quot;com.binomed.osgi.spring.test.api.IClassIOC&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;osgi:service</span>    <span class="na">id=</span><span class="s">&quot;ClassIOCPrototypeOsgi&quot;</span>
</span><span class='line'>              <span class="na">ref=</span><span class="s">&quot;ClassIOCPrototype&quot;</span>
</span><span class='line'>              <span class="na">interface=</span><span class="s">&quot;com.binomed.osgi.spring.test.api.IClassIOCPrototype&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/beans&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>On peut donc voir que notre bean ClassIOCPrototype est avec le scope prototype, il sera donc créé autant d&#8217;instance de ClassIOPrototype que l&#8217;on invoque le bean avec spring.</p>

<h3>Ecrtitue de l&#8217;Activator</h3>

<p>Nous allons maintenant nous interessé au code notre activator dans lequel on va vérifier plusieurs choses sur le fonctionnement d&#8217;OSGI avec Spring.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">binomed</span><span class="o">.</span><span class="na">osgi</span><span class="o">.</span><span class="na">spring</span><span class="o">.</span><span class="na">test</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.osgi.framework.BundleActivator</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.osgi.framework.BundleContext</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.osgi.framework.ServiceReference</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.springframework.context.ApplicationContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.binomed.osgi.spring.test.api.IClassIOC</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.binomed.osgi.spring.test.api.IClassIOCPrototype</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Activator</span> <span class="kd">implements</span> <span class="n">BundleActivator</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">static</span> <span class="n">BundleContext</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">static</span> <span class="n">BundleContext</span> <span class="nf">getContext</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * (non-Javadoc)</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @see</span>
</span><span class='line'><span class="cm">  * org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext</span>
</span><span class='line'><span class="cm">  * )</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">start</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Activator</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="n">bundleContext</span><span class="o">;</span>
</span><span class='line'>      <span class="n">Thread</span> <span class="n">thread</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>          <span class="nd">@Override</span>
</span><span class='line'>          <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>              <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">5000</span><span class="o">);</span>
</span><span class='line'>                  <span class="n">inject</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                  <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="o">}</span>
</span><span class='line'>      <span class="o">});</span>
</span><span class='line'>      <span class="n">thread</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">void</span> <span class="nf">inject</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">String</span> <span class="n">beanIdProt</span> <span class="o">=</span> <span class="s">&quot;ClassIOCPrototype&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">IClassIOC</span> <span class="n">classIOC</span> <span class="o">=</span> <span class="o">(</span><span class="n">IClassIOC</span><span class="o">)</span> <span class="n">getContext</span><span class="o">().</span><span class="na">getService</span><span class="o">(</span><span class="n">getContext</span><span class="o">().</span><span class="na">getServiceReference</span><span class="o">(</span><span class="n">IClassIOC</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
</span><span class='line'>      <span class="n">IClassIOCPrototype</span> <span class="n">classIOCPrototype</span> <span class="o">=</span> <span class="o">(</span><span class="n">IClassIOCPrototype</span><span class="o">)</span> <span class="n">getContext</span><span class="o">().</span><span class="na">getService</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getServiceReference</span><span class="o">(</span><span class="n">IClassIOCPrototype</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">classIOC</span><span class="o">.</span><span class="na">helloWorld</span><span class="o">();</span>
</span><span class='line'>      <span class="n">classIOCPrototype</span><span class="o">.</span><span class="na">helloWorld</span><span class="o">();</span>
</span><span class='line'>      <span class="n">classIOCPrototype</span> <span class="o">=</span> <span class="o">(</span><span class="n">IClassIOCPrototype</span><span class="o">)</span> <span class="n">getContext</span><span class="o">().</span><span class="na">getService</span><span class="o">(</span><span class="n">context</span><span class="o">.</span><span class="na">getServiceReference</span><span class="o">(</span><span class="n">IClassIOCPrototype</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
</span><span class='line'>      <span class="n">classIOCPrototype</span><span class="o">.</span><span class="na">helloWorld</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ServiceReference</span> <span class="n">webContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getAllServiceReferences</span><span class="o">(</span><span class="s">&quot;org.springframework.context.ApplicationContext&quot;</span><span class="o">,</span> <span class="s">&quot;(org.springframework.context.service.name=com.binomed.osgi.spring.test)&quot;</span><span class="o">)[</span><span class="mi">0</span><span class="o">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">ApplicationContext</span> <span class="n">ac</span> <span class="o">=</span> <span class="o">(</span><span class="n">ApplicationContext</span><span class="o">)</span> <span class="n">context</span><span class="o">.</span><span class="na">getService</span><span class="o">(</span><span class="n">webContext</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ac</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">beanIdProt</span><span class="o">);</span>
</span><span class='line'>      <span class="n">ac</span><span class="o">.</span><span class="na">getBean</span><span class="o">(</span><span class="n">beanIdProt</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="cm">/*</span>
</span><span class='line'><span class="cm">  * (non-Javadoc)</span>
</span><span class='line'><span class="cm">  * </span>
</span><span class='line'><span class="cm">  * @see</span>
</span><span class='line'><span class="cm">  * org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)</span>
</span><span class='line'><span class="cm">  */</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">stop</span><span class="o">(</span><span class="n">BundleContext</span> <span class="n">bundleContext</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">Exception</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">Activator</span><span class="o">.</span><span class="na">context</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>On peut voir que j&#8217;invoque plusieurs instruction dans le but de tester les instanciations faites sur mes beans.</p>

<p>Nous allons maintenant lancer notre bundle dans eclipse et analyser les résultats.</p>

<h2>Lancement du bundle dans eclipse</h2>

<p>Nous allons créer une nouvelle configuration osgi :</p>

<p><img src="http://binomed.github.com/images/2011-02-11/new_configuration.jpg"></p>

<p>Nous allons cocher tous les plugins visible sur l&#8217;écran suivant. Pour des besoins de lisibilités, j&#8217;ai affiché uniquement les bundles à prendre :</p>

<p><img src="http://binomed.github.com/images/2011-02-11/bundles.jpg"></p>

<p>Il est très important que le bundle <strong>org.springframework.osgi.extender</strong> soit coché !  c&#8217;est lui qui s&#8217;occupe de charger les applications context dans notre conteneur OSGI au moment de l&#8217;installation du bundle.</p>

<p>Penser aussi à ajouter dans l&#8217;onglet Arguments dans VM Arguments l&#8217;option <strong>* -Dosgi.clean=true</strong> de façon à bien penser à nettoyer le cache OSGI à chaque lancement.</p>

<p>Vous pouvez maintenant valider et lancer le bundle. Vous devrez avoir une sortie console similaire à celle ci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>osgi&gt; log4j:WARN No appenders could be found <span class="k">for </span>logger <span class="o">(</span>org.springframework.osgi.extender.internal.activator.ContextLoaderListener<span class="o">)</span>.
</span><span class='line'>log4j:WARN Please initialize the log4j system properly.
</span><span class='line'>LOAD!!!!
</span><span class='line'>LOAD PROTO!!!!
</span><span class='line'>Hello World Spring with OSGI
</span><span class='line'>Hello World Spring with OSGI From Proto
</span><span class='line'>Hello World Spring with OSGI From Proto
</span><span class='line'>LOAD PROTO!!!!
</span><span class='line'>LOAD PROTO!!!!
</span></code></pre></td></tr></table></div></figure>


<p>Qu&#8217;est ce qu&#8217;on peut en conclure en fonction de nos instructions et notre configuration.</p>

<ul>
<li>Le permier LOAD!!!! nous indique que notre premier service c&#8217;est loader tout seul au moment où le bundle est installé.</li>
<li>Le LOAD PROTO !!! apparaît avec un décalage indiquant qu&#8217;un service OSGI pointant vers un bean en scope prototype n&#8217;est pas pas chargé automatiquement avec le bundle extender</li>
<li>Le premier Hello World montre bien que l&#8217;on a réussi très simplement à invoquer un service de notre conteneur</li>
<li>idem pour les 2 autres appels sauf que l&#8217;on constate que un service OSGI utilisant un bean en scope prototype restera en mémoire, il ne sera pas réinstancié à chaque appel du service.</li>
<li>Enfin mes 2 derniers LOAD PROTO !!! montre que l&#8217;on peut quand même appeler l&#8217;application context de notre bundle en vue d&#8217;instancier des bean. Attention toute fois, cette pratique n&#8217;est pas recommendée, il est préférable en OSGI de gérer soit même dans ce cas l&#8217;instanciation plutot que de passer par l&#8217;application Context.</li>
</ul>


<p>Bon tout marche dans eclipse. Ok c&#8217;est bien mais c&#8217;est comme dans tout tutoriel OSGI ! Nous allons maintenant voir comment faire marcher cet exemple en dehors d&#8217;eclipse.</p>

<h2>Lancement du bundle en dehors d&#8217;eclipse</h2>

<p>Nous allons commencer par générer un  jar de notre bundle. Pour cela cliquer sur votre projet et faites exporter et choississez de l&#8217;exporter en tant que plugin</p>

<p><img src="http://binomed.github.com/images/2011-02-11/export.jpg"></p>

<p>Nous allons choisir un répertoire d&#8217;export :</p>

<p><img src="http://binomed.github.com/images/2011-02-11/export_2.jpg"></p>

<h3>Préparation du conteneur equinox</h3>

<p>Nous allons donc maintenant préparer notre conteneur equinox. Nous avons besoin de plusieurs choses :</p>

<ul>
<li>extraire le zip de notre sdk equinox</li>
<li>Préparer un répertoire de la façon suivante</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>MonTestSpringOSGI
</span><span class='line'>    |
</span><span class='line'>    <span class="sb">`</span>-&gt;org.eclipse.equinox.common_3.6.0.v20100503.jar
</span><span class='line'>    <span class="sb">`</span>-&gt;org.eclipse.osgi_3.6.1.jar
</span><span class='line'>    <span class="sb">`</span>-&gt;org.eclipse.update.configurator_3.3.100.v20100512.jar
</span><span class='line'>    +-- configuration
</span><span class='line'>            |
</span><span class='line'>            <span class="sb">`</span>-&gt;config.ini
</span><span class='line'>    +-- plugins
</span><span class='line'>            |
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.activation-1.1.1.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.annotation-1.0.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.el-2.1.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.mail-1.4.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.persistence-1.0.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.xml.bind-2.0.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.xml.soap-1.3.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.xml.stream-1.0.1.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.javax.xml.ws-2.1.1.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.org.aopalliance-1.0.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.org.apache.commons.collections-3.2.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.org.apache.commons.logging-1.1.1.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.org.apache.log4j-1.2.15.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.slf4j.api-1.5.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.slf4j.jcl-1.5.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.springsource.slf4j.log4j-1.5.0.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.aop-2.5.6.A.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.beans-2.5.6.A.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.context-2.5.6.A.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.core-2.5.6.A.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.osgi.core-1.1.3.RELEASE.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.osgi.extender-1.1.3.RELEASE.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;org.springframework.osgi.io-1.1.3.RELEASE.jar
</span><span class='line'>            <span class="sb">`</span>-&gt;com.binomed.osgi.spring.test_1.0.0.jar
</span></code></pre></td></tr></table></div></figure>


<p>les jars org.eclipse.equinox.common_3.6.0.v20100503.jar et org.eclipse.osgi_3.6.1.jar (je l&#8217;ai renommé de façon à simplifier son invocation)  sont à récupérer dans le répertoire plugins du sdk equinox, le jar org.eclipse.update.configurator_3.3.100.v20100512.jar est à récupérer dans le répertoire plugins de votre eclipse. Ce dernier sert à installer automatiquement tous les bundles présents dans le répertoire plugins
Les autres jars sont à récupérer dans la target platform générée au début du tutoriel.
Vous constaterez que j&#8217;ai mis notre bundle com.binomed.osgi.spring.test_1.0.0.jar</p>

<p>Nous allons maintenant éditer le fichier config.ini afin de définir le démarrage de notre application</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="na">osgi.bundles</span><span class="o">=</span><span class="s">org.eclipse.equinox.common@2:start\</span>
</span><span class='line'><span class="err">,</span> <span class="err">org.eclipse.update.configurator@3:start\</span>
</span><span class='line'><span class="err">,reference\:file\:plugins/org.springframework.osgi.extender-1.1.3.RELEASE.jar@start\</span>
</span><span class='line'><span class="err">,reference\:file\:plugins/com.springsource.javax.activation-1.1.1.jar@start\</span>
</span><span class='line'><span class="err">,reference\:file\:plugins/com.binomed.osgi.spring.test_1.0.0.jar@start</span>
</span><span class='line'><span class="na">osgi.bundles.defaultStartLevel</span><span class="o">=</span><span class="s">4</span>
</span><span class='line'><span class="na">eclipse.ignoreApp</span><span class="o">=</span><span class="s">true</span>
</span><span class='line'><span class="na">osgi.noShutdown</span><span class="o">=</span><span class="s">true </span>
</span><span class='line'><span class="na">osgi.clean</span><span class="o">=</span><span class="s">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cette configuration permet de spécifier l&#8217;installation auto des bundles, l&#8217;auto instanciation des services contenus dans nos bundles démarrés et enfin le démarrage de notre bundle.</p>

<p>Nous allons donc maintenant lancer notre application, ouvrons donc une console  et lançons l&#8217;instruction suivante :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>java -jar org.eclipse.osgi_3.6.1.jar -consoleLog -console
</span></code></pre></td></tr></table></div></figure>


<p>nous avons donc bien la sortie suivante :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>osgi&gt; log4j:WARN No appenders could be found <span class="k">for </span>logger <span class="o">(</span>org.springframework.osgi.extender.internal.activator.ContextLoaderListener<span class="o">)</span>.
</span><span class='line'>log4j:WARN Please initialize the log4j system properly.
</span><span class='line'>LOAD!!!!
</span><span class='line'>LOAD PROTO!!!!
</span><span class='line'>Hello World Spring with OSGI
</span><span class='line'>Hello World Spring with OSGI From Proto
</span><span class='line'>Hello World Spring with OSGI From Proto
</span><span class='line'>LOAD PROTO!!!!
</span><span class='line'>LOAD PROTO!!!!
</span></code></pre></td></tr></table></div></figure>


<p>C&#8217;est tout pour le moment. :)</p>
]]></content>
  </entry>
  
</feed>
